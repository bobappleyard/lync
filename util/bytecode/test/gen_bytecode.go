// Code generated by github.com/bobappleyard/lync/util/bytecode DO NOT EDIT
package test
import "github.com/bobappleyard/lync/util/format"


type ExampleEncoder struct {
	Buf []byte
}


func (e *ExampleEncoder) SetValue(value int) error {
	after, err := format.MarshalInto(e.Buf, uint(0))
	if err != nil {
		return err
	}
	
	after, err = format.MarshalInto(after, value)
	if err != nil {
		return err
	}
	
	e.Buf = after
	return nil
}

func (e *ExampleEncoder) Add(delta int) error {
	after, err := format.MarshalInto(e.Buf, uint(1))
	if err != nil {
		return err
	}
	
	after, err = format.MarshalInto(after, delta)
	if err != nil {
		return err
	}
	
	e.Buf = after
	return nil
}
type ExampleDecoder struct {
	Code []byte
	Pos int
	Impl Example
}

func (d *ExampleDecoder) Step() (err error) {
	switch d.Code[d.Pos] {
	
	case 0:
		b := d.Code[d.Pos+1:]
		
		var value int
		if b, err = format.UnmarshalFrom(b, &value); err != nil {
			return err
		}
		
		d.Pos = len(d.Code) - len(b)
		d.Impl.SetValue(value,)
	
	case 1:
		b := d.Code[d.Pos+1:]
		
		var delta int
		if b, err = format.UnmarshalFrom(b, &delta); err != nil {
			return err
		}
		
		d.Pos = len(d.Code) - len(b)
		d.Impl.Add(delta,)
	
	default:
		panic("unknown bytecode")
	}

	return nil
}